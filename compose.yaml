services:



  #-----------------------------------------------------
  # crawler
  #-----------------------------------------------------
  scraper:
    container_name: crawler
    image: eight/dev
    build: 
      context: .
      dockerfile: ./cmd/crawler/Dockerfile
    entrypoint: /home/vcap/app/cmd/crawler/run-fast.sh
    volumes:
      - type: bind
        source: .
        target: /app
    ports:
      - 10000:8888
    # https://docs.docker.com/compose/how-tos/startup-order/
    depends_on:
      minio:
        condition: service_healthy
      queue_db:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://crawler:8888/heartbeat || exit 1
      interval: 60s
      timeout: 180s
      retries: 3
      start_period: 60s
    environment:
      ENV: "DOCKER"

  #-----------------------------------------------------
  # river queue watcher
  #-----------------------------------------------------
  ui:
    image: ghcr.io/riverqueue/riverui:latest
    ports:
      - 10010:8080
    environment:
      DATABASE_URL: postgresql://postgres@queue_db:5432/postgres
    depends_on:
      queue_db:
        condition: service_healthy

  #-----------------------------------------------------
  # postgres - queue_db
  #-----------------------------------------------------
  queue_db:
    image: postgres:16-alpine
    ports:
      - 5432:5432
    volumes:
      - queue-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: "trust"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s  

  #-----------------------------------------------------
  # minio
  #-----------------------------------------------------
  minio:
    image: minio/minio:latest
    hostname: minio
    command: server /data --console-address ":9001" 
    expose:
      - "9000"
      - "9001"
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: nutnutnut
      MINIO_ROOT_PASSWORD: nutnutnut
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5    
    volumes:
      - minio-data:/data
      

volumes:
  queue-data:
  minio-data: